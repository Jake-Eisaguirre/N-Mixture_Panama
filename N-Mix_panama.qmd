---
title: "n-mix"
format: html
editor: source
---

---
title: "n-mix_panama"
format: html
editor: visual
---

## Load Packages

```{r}
#| output: false
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

librarian::shelf(tidyverse, RPostgres, DBI, unmarked, here, lubridate, kableExtra, GGally, MuMIn, AHMbook, AICcmodavg, openxlsx)

```

## Connect to `survey_data` schema in `ribbitr` database

```{r}
#| output: false
tryCatch({
    drv <- dbDriver("Postgres")
    print("Connecting to Databaseâ€¦")
    connection <- dbConnect(drv,
                 dbname = Sys.getenv("aws_dbname"),
                 host = Sys.getenv("aws_host"),
                 port = Sys.getenv("aws_port"),
                 user = Sys.getenv("aws_user"),
                 password = Sys.getenv("aws_password"),
                 timezone=NULL)
    print("Database Connected!")
    },
    error=function(cond) {
            print("Unable to connect to Database.")
    })

#search path
dbExecute(connection, "set search_path to survey_data")

```

## Query Panama n-mix data

```{r}
#capture
n_mix_q_c <- "select l.location, r.region, s.site, v.date, v.survey_time,
s2.transect, s2.detection_type, v2.species_capture, v2.life_stage
from location l
join region r on l.location_id = r.location_id 
join site s on r.region_id = s.region_id 
join visit v on s.site_id = v.site_id 
join survey s2 on v.visit_id = s2.visit_id 
join capture v2 on s2.survey_id = v2.survey_id
where l.location = 'panama'
and v2.life_stage = 'adult'
and v.survey_time = 'day';"

nmix_raw_data_c <- dbGetQuery(connection, n_mix_q_c) %>% 
  select(!c(region, location, life_stage)) %>%
  #mutate(count = replace_na(count, 1)) %>% 
  arrange(date) %>% 
  rename(species = species_capture)

#VES
n_mix_q_v <- "select l.location, r.region, s.site, v.date, v.survey_time,
s2.transect, s2.detection_type, v2.species_ves, v2.count, v2.life_stage
from location l
join region r on l.location_id = r.location_id 
join site s on r.region_id = s.region_id 
join visit v on s.site_id = v.site_id 
join survey s2 on v.visit_id = s2.visit_id 
join ves v2 on s2.survey_id = v2.survey_id
where l.location = 'panama'
and v2.life_stage = 'adult'
and v.survey_time = 'day';"

nmix_raw_data_v <- dbGetQuery(connection, n_mix_q_v) %>% 
  select(!c(region, location, life_stage)) %>%
  mutate(count = replace_na(count, 1)) %>% 
  filter(!count == 100) %>% 
  arrange(date) %>% 
  group_by(site, date, species_ves) %>% 
  summarise(n = sum(count)) %>% 
  filter(species_ves %in% c("lithobates_warszewitschii", "silverstoneia_flotator", 
                            "colostethus_panamensis", "rhaebo_haematiticus")) %>% 
  rename(species = species_ves)



# find all visits
visit_nmix_q <- "select l.location, r.region, s.site, v.date, v.survey_time, s2.detection_type, s2.observer
                from location l
                join region r on l.location_id = r.location_id
                join site s on r.region_id = s.region_id
                join visit v on s.site_id = v.site_id
                join survey s2 on v.visit_id = s2.visit_id
                where l.location = 'panama'
                and s2.detection_type = 'capture'
                and v.survey_time = 'day';"

nmix_raw_visits <-dbGetQuery(connection, visit_nmix_q) %>%
  arrange(date) %>%
  select(site, date) %>% 
  filter(site %in% c("altos_de_piedra", "campana_loop", "cerro_negro", "farallon", "guabal",
                     "jordinal", "mata_ahogado", "medina", "rabbit_stream", "rio_blanco", 
                     "rio_maria", "rio_tigrero", "sophia_stream", "sora"))


# Most common sites where VES was conducted
site_visits <- nmix_raw_visits %>% 
  group_by(site) %>% 
  summarize(n = sum(n()))


# silverstoneia_flotator, lithobates_warszewitschii, and colostethus_panamensis most common species
# species_count <- nmix_raw_data %>% 
#   group_by(species_capture, survey_time) %>% 
#   summarize(n = n())

```

## Populate zeroes

```{r}

spec_filt <- nmix_raw_data_c %>% 
  filter(species %in% c("lithobates_warszewitschii", "silverstoneia_flotator", 
                            "colostethus_panamensis", "rhaebo_haematiticus")) %>% 
  ungroup() %>% 
  group_by(date, site, species) %>% 
  summarise(n = n())  %>% 
  rbind(nmix_raw_data_v) %>% 
  ungroup() %>%
  group_by(date, site, species) %>% 
  summarise(n = sum(n)) %>% 
  filter(site %in% c("altos_de_piedra", "campana_loop", "cerro_negro", "farallon", "guabal",
                     "jordinal", "mata_ahogado", "medina", "rabbit_stream", "rio_blanco", 
                     "rio_maria", "rio_tigrero", "sophia_stream", "sora"))
  


# populate site zeros
nmix_clean_up <- nmix_raw_visits %>% 
  left_join(spec_filt) %>%
  complete(nesting(date, site),
           species = unique(spec_filt$species),
           fill = list(n = 0)) %>% 
  drop_na(species) %>% 
  mutate(month = month(date),
         season = if_else(month > 8, "season_2", "season_1"),
         season = if_else(month %in% c(1, 2), "season_2", season),
         site = paste(site, season, sep = "_")) %>% 
  select(!c(month, season))

```

# Season 2

## rhaebo_haematiticus

### Table Formatting

```{r}
# 3 visits
rha_table_3 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "rhaebo_haematiticus") %>% 
  select(!species) %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>%
  select(!c(site, year, visit_4, visit_5)) %>% 
  filter(!is.na(visit_3))

# 2 visits
rha_table_2 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "rhaebo_haematiticus") %>% 
  select(!species) %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>%
  filter(!is.na(visit_3)) %>% 
  select(!c(site, year, visit_4, visit_5, visit_3))


```

### model

```{r}
# 3 visits
rha_umf_3 <- unmarkedFramePCount(y = rha_table_3)

summary(rha_umf_3)

fm1_rha_3 <- pcount( ~1  ~1, 
               data = rha_umf_3, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_rha_3)

backTransform(fm1_rha_3, "state")
backTransform(fm1_rha_3, "det")

# 2 visits
rha_umf_2 <- unmarkedFramePCount(y = rha_table_2)

summary(rha_umf_2)

fm1_rha_2 <- pcount( ~1  ~1, 
               data = rha_umf_2, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_rha_2)

backTransform(fm1_rha_2, "state")
backTransform(fm1_rha_2, "det")


```

## lithobates_warszewitschii

### Table Formatting

```{r}
# 3 visits
washy_table_3 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "lithobates_warszewitschii") %>% 
  select(!species) %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>%
  select(!c(site, year, visit_4, visit_5)) %>% 
  filter(!is.na(visit_3))

# 2 visits
washy_table_2 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "lithobates_warszewitschii") %>% 
  select(!species) %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>%
  filter(!is.na(visit_3)) %>% 
  select(!c(site, year, visit_4, visit_5, visit_3))


```

### model

```{r}
# 3 visits
washy_umf_3 <- unmarkedFramePCount(y = washy_table_3)

summary(washy_umf_3)

fm1_washy_3 <- pcount( ~1  ~1, 
               data = washy_umf_3, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_washy_3)

backTransform(fm1_washy_3, "state")
backTransform(fm1_washy_3, "det")

# 2 visits
washy_umf_2 <- unmarkedFramePCount(y = washy_table_2)

summary(washy_umf_2)

fm1_washy_2 <- pcount( ~1  ~1, 
               data = washy_umf_2, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_washy_2)

backTransform(fm1_washy_2, "state")
backTransform(fm1_washy_2, "det")


```

## colostethus_panamensis

### Table Formatting

```{r}

# 3 visits
col_table_3 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "colostethus_panamensis") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  select(!species) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  select(!c(site, year, visit_4, visit_5)) %>% 
  filter(!is.na(visit_3))

# 2 visits
col_table_2 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "colostethus_panamensis") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  select(!species) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  filter(!is.na(visit_3)) %>% 
  select(!c(site, year, visit_4, visit_5, visit_3))


```

### model

```{r}

# 3 visits
col_umf_3 <- unmarkedFramePCount(y = col_table_3)

summary(col_umf_3)

fm1_col_3 <- pcount( ~1  ~1, 
               data = col_umf_3, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_col_3)

backTransform(fm1_col_3, "state")
backTransform(fm1_col_3, "det")


# 2 visits
col_umf_2 <- unmarkedFramePCount(y = col_table_2)

summary(col_umf_2)

fm1_col_2 <- pcount( ~1  ~1, 
               data = col_umf_2, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_col_2)

backTransform(fm1_col_2, "state")
backTransform(fm1_col_2, "det")

```

## silverstoneia_flotator

### Table Formatting

```{r}

# 3 visits
flo_table_3 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "silverstoneia_flotator") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>%
  select(!species) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  select(!c(site, year, visit_4, visit_5)) %>% 
  filter(!is.na(visit_3))

# 2 visits
flo_table_2 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "silverstoneia_flotator") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>%
  select(!species) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  filter(!is.na(visit_3)) %>% 
  select(!c(site, year, visit_4, visit_5, visit_3))

```

### model

```{r}
# 3 visits
flo_umf_3 <- unmarkedFramePCount(y = flo_table_3)

summary(flo_umf_3)

fm1_flo_3 <- pcount( ~1  ~1, 
               data = flo_umf_3, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_flo_3)

backTransform(fm1_flo_3, "state")
backTransform(fm1_flo_3, "det")


# 2 visits
flo_umf_2 <- unmarkedFramePCount(y = flo_table_2)

summary(flo_umf_2)

fm1_flo_2 <- pcount( ~1  ~1, 
               data = flo_umf_2, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_flo_2)

backTransform(fm1_flo_2, "state")
backTransform(fm1_flo_2, "det")


```

# Season 1

## rhaebo_haematiticus

### Table Formatting

```{r}
# 3 visits
rha_table.3 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_1")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "rhaebo_haematiticus") %>% 
  select(!species) %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>%
  select(!c(site, year, visit_4, visit_5)) %>% 
  filter(!is.na(visit_3))

# 2 visits
rha_table.2 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_1")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "rhaebo_haematiticus") %>% 
  select(!species) %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>%
  filter(!is.na(visit_3)) %>% 
  select(!c(site, year, visit_4, visit_5, visit_3))


```

### model

```{r}
# 3 visits
rha_umf.3 <- unmarkedFramePCount(y = rha_table.3)

summary(rha_umf.3)

fm1_rha.3 <- pcount( ~1  ~1, 
               data = rha_umf.3, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_rha.3)

backTransform(fm1_rha.3, "state")
backTransform(fm1_rha.3, "det")

# 2 visits
rha_umf.2 <- unmarkedFramePCount(y = rha_table.2)

summary(rha_umf.2)

fm1_rha.2 <- pcount( ~1  ~1, 
               data = rha_umf.2, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_rha.2)

backTransform(fm1_rha.2, "state")
backTransform(fm1_rha.2, "det")


```

## lithobates_warszewitschii

### Table Formatting

```{r}

# 3 visits
washy_table.3 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_1")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "lithobates_warszewitschii") %>% 
  select(!species) %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>%
  select(!c(site, year, visit_4, visit_5, visit_6)) %>% 
  filter(!is.na(visit_3))

# 2 visits
washy_table.2 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "lithobates_warszewitschii") %>% 
  select(!species) %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>%
  filter(!is.na(visit_3)) %>% 
  select(!c(site, year, visit_4, visit_5, visit_3))


```

### model

```{r}

# 3 visits
washy_umf.3 <- unmarkedFramePCount(y = washy_table.3)

summary(washy_umf.3)

fm1_washy.3 <- pcount( ~1  ~1, 
               data = washy_umf.3, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_washy.3)

backTransform(fm1_washy.3, "state")
backTransform(fm1_washy.3, "det")

# 2 visits
washy_umf.2 <- unmarkedFramePCount(y = washy_table.2)

summary(washy_umf.2)

fm1_washy.2 <- pcount( ~1  ~1, 
               data = washy_umf.2, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_washy.2)

backTransform(fm1_washy.2, "state")
backTransform(fm1_washy.2, "det")


```

## colostethus_panamensis

### Table Formatting

```{r}
# 3 visits
col_table.3 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_1")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "colostethus_panamensis") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  select(!species) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  select(!c(site, year, visit_4, visit_5)) %>% 
  filter(!is.na(visit_3))

# 2 visits
col_table.2 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_2")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "colostethus_panamensis") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>% 
  select(!species) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  filter(!is.na(visit_3)) %>% 
  select(!c(site, year, visit_4, visit_5, visit_3))


```

### model

```{r}

# 3 visits
col_umf.3 <- unmarkedFramePCount(y = col_table.3)

summary(col_umf.3)

fm1_col.3 <- pcount( ~1  ~1, 
               data = col_umf.3, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_col.3)

backTransform(fm1_col.3, "state")
backTransform(fm1_col.3, "det")

# 2 visits
col_umf.2 <- unmarkedFramePCount(y = col_table.2)

summary(col_umf.2)

fm1_col.2 <- pcount( ~1  ~1, 
               data = col_umf.2, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_col.2)

backTransform(fm1_col.2, "state")
backTransform(fm1_col.2, "det")

```

## silverstoneia_flotator

### Table Formatting

```{r}
# 3 visits
flo_table.3 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_1")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "silverstoneia_flotator") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>%
  select(!species) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  select(!c(site, year, visit_4, visit_5)) %>% 
  filter(!is.na(visit_3))

# 2 visits
flo_table.2 <- nmix_clean_up %>% 
  filter(str_detect(site, "season_1")) %>% 
  select(site, date, species, n) %>% 
  filter(species == "silverstoneia_flotator") %>% 
  mutate(year = year(date),
         site = paste(year, site, sep = "_")) %>%
  select(!species) %>% 
  group_by(site) %>% 
  mutate(n_visit = match(date, unique(date)),
         n_visit = paste0("visit_", n_visit, sep = "")) %>% 
  group_by(site, date) %>% 
  unique() %>% 
  ungroup() %>% 
  select(!date) %>% 
  ungroup() %>%
  pivot_wider(names_from = c("n_visit"), values_from = c("n")) %>% 
  group_by(site) %>% 
  mutate(across(contains("visit"), 
                ~ifelse(is.na(.) &
                          !is.na(lag(.)), 0, .))) %>% 
  ungroup() %>% 
  filter(!is.na(visit_3)) %>% 
  select(!c(site, year, visit_4, visit_5, visit_3))



```

### model

```{r}

# 3 visits
flo_umf.3 <- unmarkedFramePCount(y = flo_table.3)

summary(flo_umf.3)

fm1_flo.3 <- pcount( ~1  ~1, 
               data = flo_umf.3, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_flo.3)

backTransform(fm1_flo.3, "state")
backTransform(fm1_flo.3, "det")

# 2 visits
flo_umf.2 <- unmarkedFramePCount(y = flo_table.2)

summary(flo_umf.2)

fm1_flo.2 <- pcount( ~1  ~1, 
               data = flo_umf.2, 
               engine = "R",
               control=list(trace=T, REPORT=5))

summary(fm1_flo.2)

backTransform(fm1_flo.2, "state")
backTransform(fm1_flo.2, "det")




```